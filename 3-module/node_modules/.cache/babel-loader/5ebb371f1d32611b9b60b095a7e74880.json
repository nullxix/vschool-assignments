{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/dev/vschool/assignments/3-module/src/apps/grid-selector/components/Grid.js\";\nimport React from \"react\";\nimport GridDot from \"./GridDot\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectorIndex: 7,\n      gridDotCount: 64\n    };\n    document.body.addEventListener(\"keypress\", this.handleKeyPress);\n  }\n\n  handleKeyPress(event) {\n    let newIndex = this.state.selectorIndex;\n    let gridHeight = 4;\n\n    let tryNewIndex = i => {\n      if (newIndex + i > 0 && newIndex + 1 < this.state.gridDotCount) {\n        //new index is within bounds\n        return newIndex += i;\n      } else {\n        if (newIndex + i > 0) {\n          //new index is above bounds\n          return newIndex = this.state.gridDotCount - (i - newIndex);\n        } else {\n          //new index is below bounds\n          return newIndex = newIndex - (this.state.gridDotCount - i);\n        }\n      }\n    };\n\n    switch (event.keyCode) {\n      case \"37\":\n        //left\n        tryNewIndex(-4);\n        break;\n\n      case \"38\":\n        //up\n        tryNewIndex(-1);\n        break;\n\n      case \"39\":\n        //right\n        tryNewIndex(4);\n        break;\n\n      case \"40\":\n        //down\n        tryNewIndex(1);\n        break;\n    }\n\n    let newState = this.state;\n    newState.selectorIndex = newIndex;\n    this.setState();\n  }\n\n  render() {\n    let dotArray = Array(this.state.gridDotCount).fill(null).map((ele, i) => {\n      let isSelected = this.state.selectorIndex === i ? true : false;\n      console.log(isSelected);\n      return React.createElement(GridDot, {\n        key: \"grid-dot\" + i,\n        temp: i + 1,\n        selected: isSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, dotArray);\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/mymac/dev/vschool/assignments/3-module/src/apps/grid-selector/components/Grid.js"],"names":["React","GridDot","Grid","Component","constructor","props","state","selectorIndex","gridDotCount","document","body","addEventListener","handleKeyPress","event","newIndex","gridHeight","tryNewIndex","i","keyCode","newState","setState","render","dotArray","Array","fill","map","ele","isSelected","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,CADN;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAKJC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,UAA/B,EAA0C,KAAKC,cAA/C;AACC;;AAEDA,EAAAA,cAAc,CAACC,KAAD,EAAO;AACjB,QAAIC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,aAA1B;AACA,QAAIQ,UAAU,GAAG,CAAjB;;AAEA,QAAIC,WAAW,GAAIC,CAAD,IAAO;AACrB,UAAGH,QAAQ,GAAGG,CAAX,GAAe,CAAf,IAAoBH,QAAQ,GAAG,CAAX,GAAe,KAAKR,KAAL,CAAWE,YAAjD,EAA8D;AAC1D;AACA,eAAOM,QAAQ,IAAIG,CAAnB;AACH,OAHD,MAGO;AACH,YAAGH,QAAQ,GAAGG,CAAX,GAAe,CAAlB,EAAoB;AAChB;AACA,iBAAOH,QAAQ,GAAG,KAAKR,KAAL,CAAWE,YAAX,IAA2BS,CAAC,GAAGH,QAA/B,CAAlB;AACH,SAHD,MAGO;AACH;AACA,iBAAOA,QAAQ,GAAGA,QAAQ,IAAI,KAAKR,KAAL,CAAWE,YAAX,GAA0BS,CAA9B,CAA1B;AACH;AACJ;AACJ,KAbD;;AAcA,YAAOJ,KAAK,CAACK,OAAb;AACI,WAAK,IAAL;AAAW;AACHF,QAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACA;;AACR,WAAK,IAAL;AAAW;AACHA,QAAAA,WAAW,CAAC,CAAC,CAAF,CAAX;AACA;;AACR,WAAK,IAAL;AAAW;AACHA,QAAAA,WAAW,CAAC,CAAD,CAAX;AACA;;AACR,WAAK,IAAL;AAAW;AACHA,QAAAA,WAAW,CAAC,CAAD,CAAX;AACA;AAZZ;;AAeA,QAAIG,QAAQ,GAAG,KAAKb,KAApB;AACAa,IAAAA,QAAQ,CAACZ,aAAT,GAAyBO,QAAzB;AACA,SAAKM,QAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAER,QAAIC,QAAQ,GAAGC,KAAK,CAAC,KAAKjB,KAAL,CAAWE,YAAZ,CAAL,CAA+BgB,IAA/B,CAAoC,IAApC,EAA0CC,GAA1C,CAA8C,CAACC,GAAD,EAAMT,CAAN,KAAY;AACrE,UAAIU,UAAU,GAAG,KAAKrB,KAAL,CAAWC,aAAX,KAA6BU,CAA7B,GAAiC,IAAjC,GAAwC,KAAzD;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAE,aAAWV,CAAzB;AAA4B,QAAA,IAAI,EAAEA,CAAC,GAAC,CAApC;AAAuC,QAAA,QAAQ,EAAEU,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KALc,CAAf;AAOI,WACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,QADL,CADJ;AAKH;;AA/D6B;;AAoElC,eAAepB,IAAf","sourcesContent":["import React from \"react\"\nimport GridDot from \"./GridDot\"\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            selectorIndex: 7,\n            gridDotCount: 64\n        }\n\n    document.body.addEventListener(\"keypress\",this.handleKeyPress)\n    }\n\n    handleKeyPress(event){\n        let newIndex = this.state.selectorIndex;\n        let gridHeight = 4;\n\n        let tryNewIndex = (i) => {\n            if(newIndex + i > 0 && newIndex + 1 < this.state.gridDotCount){\n                //new index is within bounds\n                return newIndex += i;\n            } else {\n                if(newIndex + i > 0){\n                    //new index is above bounds\n                    return newIndex = this.state.gridDotCount - (i - newIndex)\n                } else {\n                    //new index is below bounds\n                    return newIndex = newIndex - (this.state.gridDotCount - i);\n                }\n            }\n        }\n        switch(event.keyCode){\n            case \"37\": //left\n                    tryNewIndex(-4)\n                    break;\n            case \"38\": //up\n                    tryNewIndex(-1)\n                    break;\n            case \"39\": //right\n                    tryNewIndex(4)\n                    break;\n            case \"40\": //down\n                    tryNewIndex(1)\n                    break;\n\n        }\n        let newState = this.state;\n        newState.selectorIndex = newIndex;\n        this.setState()\n    }\n\n    render(){\n\n    let dotArray = Array(this.state.gridDotCount).fill(null).map((ele, i) => {\n        let isSelected = this.state.selectorIndex === i ? true : false;\n        console.log(isSelected)\n\n        return <GridDot key={\"grid-dot\"+i} temp={i+1} selected={isSelected}/>\n    })\n\n        return(\n            <div id=\"grid\">\n                {dotArray}\n            </div>\n        )\n    }\n\n\n}\n\nexport default Grid"]},"metadata":{},"sourceType":"module"}