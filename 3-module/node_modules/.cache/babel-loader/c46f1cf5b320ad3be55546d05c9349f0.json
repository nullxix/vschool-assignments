{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/dev/vschool/assignments/3-module/src/apps/grid-selector/components/GridDot.js\";\nimport React from \"react\";\n\nclass GridDot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.props.selected\n    }; //select function is currently unused\n\n    this.select = (() => {\n      let newState = this.state;\n      newState.selected = true;\n      this.setState(newState);\n    }).bind(this);\n  } // componentWillReceiveProps(prevProps){\n  //     if(prevProps.selected !== this.props.selected){\n  //         this.setState(\n  //             {selected: this.props.selected}\n  //         )\n  //     } \n  // }\n\n\n  handleChange() {}\n\n  render() {\n    //add 'selected' class if this element is selected\n    //className = this.state.selected ? \"grid-dot selected\": \"grid-dot\";\n    //className={className}\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" \", this.props.temp ? this.props.temp : \"0\");\n  }\n\n}\n\nexport default GridDot;","map":{"version":3,"sources":["/Users/mymac/dev/vschool/assignments/3-module/src/apps/grid-selector/components/GridDot.js"],"names":["React","GridDot","Component","constructor","props","state","selected","select","newState","setState","bind","handleChange","render","className","temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AADZ,KAAb,CAFc,CAKd;;AACA,SAAKC,MAAL,GAAc,CAAC,MAAM;AACjB,UAAIC,QAAQ,GAAG,KAAKH,KAApB;AACAG,MAAAA,QAAQ,CAACF,QAAT,GAAoB,IAApB;AACA,WAAKG,QAAL,CAAcD,QAAd;AACH,KAJa,EAIXE,IAJW,CAIN,IAJM,CAAd;AAKH,GAZgC,CAcjC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,YAAY,GAAE,CAEb;;AAEDC,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AAEA,WACI;AAAK,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwC,KAAKT,KAAL,CAAWU,IAAX,GAAkB,KAAKV,KAAL,CAAWU,IAA7B,GAAoC,GAA5E,CADJ;AAGH;;AAjCgC;;AAsCrC,eAAeb,OAAf","sourcesContent":["import React from \"react\"\n\nclass GridDot extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            selected: this.props.selected,\n        }\n        //select function is currently unused\n        this.select = (() => {\n            let newState = this.state;\n            newState.selected = true;\n            this.setState(newState)   \n        }).bind(this)\n    }\n\n    // componentWillReceiveProps(prevProps){\n    //     if(prevProps.selected !== this.props.selected){\n    //         this.setState(\n    //             {selected: this.props.selected}\n    //         )\n    //     } \n    // }\n    handleChange(){\n\n    }\n\n    render(){\n        //add 'selected' class if this element is selected\n        //className = this.state.selected ? \"grid-dot selected\": \"grid-dot\";\n        //className={className}\n\n        return(\n            <div className={this.props.className}> {this.props.temp ? this.props.temp : \"0\" }</div>\n        )\n    }\n\n    \n}\n\nexport default GridDot"]},"metadata":{},"sourceType":"module"}