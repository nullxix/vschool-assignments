{"ast":null,"code":"import _slicedToArray from \"/Users/mymac/dev/vschool/assignments/3-module/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mymac/dev/vschool/assignments/3-module/src/apps/darker-side/App.js\";\nimport React, { useState } from \"react\";\nimport UltimateTheme from \"./UltimateTheme\";\nimport Cube from \"./Cube\";\nexport default function App() {\n  const _useState = useState({\n    value: UltimateTheme.value.value,\n    toggle: () => {\n      setValue(values[Math.floor(Math.random() * values.length)]);\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return React.createElement(UltimateTheme.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Cube, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/mymac/dev/vschool/assignments/3-module/src/apps/darker-side/App.js"],"names":["React","useState","UltimateTheme","Cube","App","value","toggle","setValue","values","Math","floor","random","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA,oBACCH,QAAQ,CAAC;AAC/BI,IAAAA,KAAK,EAAEH,aAAa,CAACG,KAAd,CAAoBA,KADI;AAE/BC,IAAAA,MAAM,EAAE,MAAM;AACVC,MAAAA,QAAQ,CACJC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,MAAM,CAACI,MAAhC,CAAD,CADF,CAAR;AAGH;AAN8B,GAAD,CADT;AAAA;AAAA,QAClBP,KADkB;AAAA,QACXE,QADW;;AAWzB,SACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH","sourcesContent":["import React, {useState} from \"react\"\nimport UltimateTheme from \"./UltimateTheme\"\nimport Cube from \"./Cube\"\n\nexport default function App(){\n    const [value, setValue] = useState({\n        value: UltimateTheme.value.value,\n        toggle: () => {\n            setValue(\n                values[Math.floor(Math.random()*values.length)]\n            )\n        }\n    })\n\n\n    return (\n        <UltimateTheme.Provider value={value}>\n            <Cube/>\n        </UltimateTheme.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}