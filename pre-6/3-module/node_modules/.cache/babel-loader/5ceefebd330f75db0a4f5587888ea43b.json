{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/dev/vschool/assignments/3-module/src/apps/meme/App.js\";\nimport React from \"react\";\nimport Img from \"./Img\";\nimport Form from \"./Form\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topText: \"Hello\",\n      bottomText: \"There\",\n      allImages: []\n    };\n    (this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(\"Submitted!\");\n      this.setState({\n        topText: event.target.topText.value,\n        bottomText: event.target.bottomText.value\n      });\n    }).bind(this);\n\n    this.randomImage = () => {\n      Math.floor(Math.random() * this.state.allImages.length);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(result => result.json()).then(result => {\n      let allImages = result.data.memes.map(meme => {\n        return meme.url;\n      });\n      this.setState({\n        allImages\n      });\n    });\n  }\n\n  render(props) {\n    //https://api.imgflip.com/get_memes\n    return React.createElement(\"div\", {\n      id: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Img, {\n      image: \"http://i.imgflip.com/1bij.jpg\",\n      topText: this.state.topText,\n      bottomText: this.state.bottomText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mymac/dev/vschool/assignments/3-module/src/apps/meme/App.js"],"names":["React","Img","Form","App","Component","constructor","props","state","topText","bottomText","allImages","handleSubmit","event","preventDefault","console","log","setState","target","value","bind","randomImage","Math","floor","random","length","componentDidMount","fetch","then","result","json","data","memes","map","meme","url","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,OADA;AAETC,MAAAA,UAAU,EAAE,OAFH;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAMC,KAAC,KAAKC,YAAL,GAAqBC,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,OAAO,EAAEI,KAAK,CAACK,MAAN,CAAaT,OAAb,CAAqBU,KADpB;AAEVT,QAAAA,UAAU,EAAEG,KAAK,CAACK,MAAN,CAAaR,UAAb,CAAwBS;AAF1B,OAAd;AAIH,KAPA,EAOEC,IAPF,CAOO,IAPP;;AASC,SAAKC,WAAL,GAAmB,MAAM;AACvBC,MAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAKhB,KAAL,CAAWG,SAAX,CAAqBc,MAA9C;AACH,KAFA;AAGJ;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUC,MAAM,IAAI;AACZ,UAAIlB,SAAS,GAAGkB,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAI,IAAI;AACvC,eAAOA,IAAI,CAACC,GAAZ;AACP,OAFe,CAAhB;AAGA,WAAKlB,QAAL,CAAc;AAACN,QAAAA;AAAD,OAAd;AACH,KAPL;AAQH;;AAEDyB,EAAAA,MAAM,CAAC7B,KAAD,EAAO;AACT;AACA,WACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKK,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,+BAAX;AAA2C,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,OAA/D;AAAwE,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3C4B;;AA8CjC,eAAeN,GAAf","sourcesContent":["import React from \"react\"\nimport Img from \"./Img\"\nimport Form from \"./Form\"\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            topText: \"Hello\",\n            bottomText: \"There\",\n            allImages: []\n        }\n\n        ;(this.handleSubmit = (event) => {\n            event.preventDefault();\n            console.log(\"Submitted!\")\n            this.setState({\n                topText: event.target.topText.value,\n                bottomText: event.target.bottomText.value\n            })\n        }).bind(this)\n\n        ;(this.randomImage = () => {\n            Math.floor(Math.random()*this.state.allImages.length)\n        })\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(result => result.json())\n            .then(result => {\n                let allImages = result.data.memes.map( meme => {\n                        return meme.url;\n                })\n                this.setState({allImages})\n            })\n    }\n\n    render(props){\n        //https://api.imgflip.com/get_memes\n        return(\n            <div id='app'>\n                <Form handleSubmit={this.handleSubmit}/>\n                <Img image=\"http://i.imgflip.com/1bij.jpg\" topText={this.state.topText} bottomText={this.state.bottomText}/>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}